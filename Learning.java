/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project101;
import javax.swing.JOptionPane;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
/**
 *
 * @author timomichaelis
 */
public class Learning extends javax.swing.JFrame {
    private String path, ta, h; 
    int size;
    int difficulty = 1; 
    boolean hintChecked = false; 
    LinkedList <CardObj> c; 
    
    /**
     * Creates new form Testing
     */
    public Learning(String route, LinkedList a) {
        initComponents();
        this.setLocationRelativeTo(null); 
        path = route; 
        c = a;
        jQuestionBox.setText(c.get(0).question); 
        
        jEasy.setEnabled(false); 
        jMid.setEnabled(true);
        jHard.setEnabled(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jQuestionBox = new javax.swing.JTextArea();
        jEasy = new javax.swing.JButton();
        jAnswerBox = new javax.swing.JTextField();
        jNext = new javax.swing.JButton();
        kBack = new javax.swing.JButton();
        jHard = new javax.swing.JButton();
        jHint = new javax.swing.JButton();
        jMid = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jQuestionBox.setColumns(20);
        jQuestionBox.setRows(5);
        jScrollPane1.setViewportView(jQuestionBox);

        jEasy.setText("Easy");
        jEasy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEasyActionPerformed(evt);
            }
        });

        jAnswerBox.setText("Answer");
        jAnswerBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAnswerBoxActionPerformed(evt);
            }
        });

        jNext.setText("Next");
        jNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNextActionPerformed(evt);
            }
        });

        kBack.setText("<");
        kBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kBackActionPerformed(evt);
            }
        });

        jHard.setText("Hard");
        jHard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHardActionPerformed(evt);
            }
        });

        jHint.setText("Hint");
        jHint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHintActionPerformed(evt);
            }
        });

        jMid.setText("Medium");
        jMid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jHint, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jEasy, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jMid)
                        .addGap(9, 9, 9)
                        .addComponent(jHard, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jAnswerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jNext, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(kBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(kBack)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAnswerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNext, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHint, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEasy, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHard)
                    .addComponent(jMid))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAnswerBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAnswerBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAnswerBoxActionPerformed

    private void kBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        try { 
            Flashcards_topic ft = new Flashcards_topic();
            ft.setVisible(true); 
        } catch (IOException ex) {
            Logger.getLogger(Learning.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_kBackActionPerformed

    private void jEasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEasyActionPerformed
        // TODO add your handling code here:
        jEasy.setEnabled(false); 
        jMid.setEnabled(true);
        jHard.setEnabled(true);
        
    }//GEN-LAST:event_jEasyActionPerformed

    private void jNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNextActionPerformed
        try {
            // TODO add your handling code here:
            CardObj co = new CardObj(path);
            co.createList();
            
            ta = c.get(0).answer;
            
        } catch (IOException ex) {
            Logger.getLogger(Learning.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        if(jAnswerBox.getText().equals(ta)){
            if(jEasy.isEnabled() == false){
            difficulty = 0; 
            }
            else if(jMid.isEnabled() == false){
            difficulty = 1; 
            }
            else if(jHard.isEnabled() == false){
            difficulty = 2; 
            }
        }
        
        if(jAnswerBox.getText().equals(ta) && hintChecked == true ){
            if(jEasy.isEnabled() == false){
            difficulty = 1; 
            }
            else if(jMid.isEnabled() == false){
            difficulty = 2; 
            }
            else if(jHard.isEnabled() == false){
            difficulty = 3; 
            }
        }
        
        if(!jAnswerBox.getText().equals(ta)){
            if(jEasy.isEnabled() == false){
            difficulty = 2; 
            }
            else if(jMid.isEnabled() == false){
        
            difficulty = 3; 
            }
            else if(jHard.isEnabled() == false){
            difficulty = 4;
            }
        }
        
        System.out.println("the diff before anscheck is opened"+difficulty);
        this.dispose(); 
        AnsCheck ac = new AnsCheck(path,jAnswerBox.getText(), difficulty ,c); 
        ac.setVisible(true);
        
        
        
        
        
    }//GEN-LAST:event_jNextActionPerformed

    private void jHardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHardActionPerformed
        // TODO add your handling code here:
        jEasy.setEnabled(true); 
        jMid.setEnabled(true);
        jHard.setEnabled(false);
    }//GEN-LAST:event_jHardActionPerformed

    private void jHintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHintActionPerformed
        // TODO add your handling code here:
        hintChecked = true; 
        
        try{
        CardObj co = new CardObj(path);
            co.createList();
            h = c.get(0).hint;
        } catch (IOException ex) {
           System.out.print("error with displaing hint");
        } 
        JOptionPane.showMessageDialog(rootPane, h);
    }//GEN-LAST:event_jHintActionPerformed

    private void jMidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMidActionPerformed
        // TODO add your handling code here:
        jEasy.setEnabled(true); 
        jMid.setEnabled(false);
        jHard.setEnabled(true);
    }//GEN-LAST:event_jMidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Learning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Learning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Learning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Learning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LinkedList a = null;
                new Learning("plswork",a).setVisible(true);
            }
        });
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAnswerBox;
    private javax.swing.JButton jEasy;
    private javax.swing.JButton jHard;
    private javax.swing.JButton jHint;
    private javax.swing.JButton jMid;
    private javax.swing.JButton jNext;
    private javax.swing.JTextArea jQuestionBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kBack;
    // End of variables declaration//GEN-END:variables
}
