package project101;


import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author timomichaelis
 */ 
public class View extends javax.swing.JFrame {
    
     String path; 
        int index; 
        int size;
    /**
     * 
     * Creates new form Learn
     */
    public View(String route, int index) throws IOException{
        
        
        initComponents(); 
        this.setLocationRelativeTo(null);
        path = route ; 
        this.index = index; 
        
        
        
        jDisplay.setEditable(false);
        jQuestion.setEnabled(false);
        jHint.setEnabled(true);
        jAnswer.setEnabled(true);

        
        try {
             CardObj co = new CardObj(path);
             co.createList();
             size = co.cardList.size();
             jDisplay.setText(co.cardList.get(index).question);
         } catch (IOException ex) {
             Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jNext = new javax.swing.JButton();
        jPrevious = new javax.swing.JButton();
        jBack = new javax.swing.JButton();
        jQuestion = new javax.swing.JButton();
        jAnswer = new javax.swing.JButton();
        jHint = new javax.swing.JButton();
        jDisplay = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jNext.setText(">");
        jNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNextActionPerformed(evt);
            }
        });

        jPrevious.setText("<");
        jPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPreviousActionPerformed(evt);
            }
        });

        jBack.setText("<");
        jBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackActionPerformed(evt);
            }
        });

        jQuestion.setText("Question");
        jQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jQuestionActionPerformed(evt);
            }
        });

        jAnswer.setText("Answer");
        jAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAnswerActionPerformed(evt);
            }
        });

        jHint.setText("Hint");
        jHint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHintActionPerformed(evt);
            }
        });

        jDisplay.setText("Empty");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jBack)
                        .addGap(53, 53, 53)
                        .addComponent(jQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jHint, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jNext, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHint, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNext, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNextActionPerformed
        if(index < size - 1){
        index++; 
        this.dispose();
            try { 
                View l = new View(path,index);
                l.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            this.dispose();
            try{  
                Flashcards_topic fl = new Flashcards_topic();
                fl.setVisible(true);
            } catch (IOException ex) {
            Logger.getLogger(Window_1.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println();
            System.out.println("I also don't know one!");
            }
        
        }
        
    }//GEN-LAST:event_jNextActionPerformed

    private void jPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPreviousActionPerformed
        // TODO add your handling code here:
        if(index > 0){
        index = index -1; 
        this.dispose();
            try { 
                View l = new View(path,index);
                l.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jPreviousActionPerformed

    private void jBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackActionPerformed
        try {
            // TODO add your handling code here:
            this.dispose();
            Flashcards_topic g = new Flashcards_topic();
            g.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jBackActionPerformed

    private void jAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAnswerActionPerformed
         // TODO add your handling code here:
        jQuestion.setEnabled(true);
        jHint.setEnabled(true);
        jAnswer.setEnabled(false);

        try {
             CardObj co = new CardObj(path);
             co.createList();
             jDisplay.setText(co.cardList.get(index).answer);
         } catch (IOException ex) {
             Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jAnswerActionPerformed

    private void jHintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHintActionPerformed
        // TODO add your handling code here:
        jQuestion.setEnabled(true);
        jHint.setEnabled(false);
        jAnswer.setEnabled(true);
        try {
             CardObj co = new CardObj(path);
             co.createList();
             jDisplay.setText(co.cardList.get(index).hint);
         } catch (IOException ex) {
             Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jHintActionPerformed

    private void jQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jQuestionActionPerformed
         
             // TODO add your handling code here:
             jQuestion.setEnabled(false);
             jHint.setEnabled(true);
             jAnswer.setEnabled(true);
             
         try {
             CardObj co = new CardObj(path);
             co.createList();
             jDisplay.setText(co.cardList.get(index).question);
         } catch (IOException ex) {
             Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }//GEN-LAST:event_jQuestionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                try {
                    new View("plswork",0).setVisible(true);
                } catch (IOException ex) {
                    System.out.print(ex.getMessage());
                }
              
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAnswer;
    private javax.swing.JButton jBack;
    private javax.swing.JTextField jDisplay;
    private javax.swing.JButton jHint;
    private javax.swing.JButton jNext;
    private javax.swing.JButton jPrevious;
    private javax.swing.JButton jQuestion;
    // End of variables declaration//GEN-END:variables
}
