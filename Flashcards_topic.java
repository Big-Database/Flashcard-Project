/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package project101;

import java.io.IOException;
import java.util.LinkedList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author timomichaelis
 */
public class Flashcards_topic extends javax.swing.JFrame {

    String titles = "/Users/timomichaelis/Desktop/NewFolder.1/Files/Folder/fLash_titles.txt"; 

    public Flashcards_topic() throws IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        
        
        Read_write rl = new Read_write(titles, true); 
        String [] arr = rl.OpenFile(); 
        
        DefaultListModel dml = new DefaultListModel(); 
        for(int i = 0; i < arr.length; i++){

            dml.addElement(arr[i]); 
        
        }
        jTitleList.setModel(dml); 
        
         
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollBar1 = new javax.swing.JScrollBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        back1 = new javax.swing.JButton();
        create_new = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jView = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTitleList = new javax.swing.JList<>();
        jOverview = new javax.swing.JButton();
        jStat = new javax.swing.JButton();
        jTest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLearn = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(238, 189, 107));

        back1.setText("<");
        back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back1ActionPerformed(evt);
            }
        });

        create_new.setText("New");
        create_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_newActionPerformed(evt);
            }
        });

        jDelete.setText("Delete");
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        jView.setText("View");
        jView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jViewActionPerformed(evt);
            }
        });

        jTitleList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jTitleList);

        jOverview.setText("Overview");
        jOverview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOverviewActionPerformed(evt);
            }
        });

        jStat.setText("Statistics");
        jStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStatActionPerformed(evt);
            }
        });

        jTest.setText("Test");
        jTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTestActionPerformed(evt);
            }
        });

        jLabel1.setText("Topics:");

        jLearn.setText("Learn");
        jLearn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLearnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(create_new, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jView, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jOverview, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(back1))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTest, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jStat, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLearn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(back1)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jStat, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(jTest, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLearn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jView, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jOverview, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(create_new, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDelete)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back1ActionPerformed
        // TODO add your handling code here:
        this.dispose(); 
        Window_1 w = new Window_1(); 
        w.setVisible(true);
    }//GEN-LAST:event_back1ActionPerformed

    private void create_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_newActionPerformed
        
        this.dispose(); 
        File_Creation nc = new File_Creation(); 
        nc.setVisible(true);
        
    }//GEN-LAST:event_create_newActionPerformed

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
        // TODO add your handling code here:
        if(jTitleList.isSelectionEmpty()){
        JOptionPane.showMessageDialog(rootPane, "Please Select the desired Title first.");
        }
        else{ 
            String arr[] = null;
            String dir = jTitleList.getSelectedValue();
            Read_write rw = new Read_write(titles, true);
            try { 
                arr = rw.OpenFile();
            } catch (IOException ex) {
                Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
            }
            Read_write rw2 = new Read_write(titles, false);
            try {
                        rw2.writeLine(arr[0]);
                        
                    } catch (IOException ex) {
                        Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
                    }
            
            for(int i = 1 ; i < arr.length; i++){
                if(!dir.equals(arr[i])){
                    try {
                        rw.writeLine(arr[i]);
                    } catch (IOException ex) {
                        Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            this.dispose(); 
            
            try {
                Flashcards_topic topic  = new Flashcards_topic();
                topic.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jViewActionPerformed
        
        if(jTitleList.isSelectionEmpty()){
        JOptionPane.showMessageDialog(rootPane, "Please Select the desired Title first.");
        
        }
        else{
            try {
                String dir = jTitleList.getSelectedValue();
                this.dispose();
                View l = new View(dir,0);
                l.setVisible(true);
            } catch (IOException ex) {
                System.out.print(ex.getMessage());
            }
        }
    }//GEN-LAST:event_jViewActionPerformed

    private void jOverviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOverviewActionPerformed
        // TODO add your handling code here:
        if(jTitleList.isSelectionEmpty()){
        JOptionPane.showMessageDialog(rootPane, "Please Select the desired Title first.");
        
        }else{
            String dir = jTitleList.getSelectedValue();
            this.dispose(); 
            Folder_Overview vf = new Folder_Overview(dir); 
            vf.setVisible(true);
        }
        
    }//GEN-LAST:event_jOverviewActionPerformed

    private void jStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStatActionPerformed
        // TODO add your handling code here:
    if(jTitleList.isSelectionEmpty()){
        JOptionPane.showMessageDialog(rootPane, "Please Select the desired Title first.");
        
        }
    else{  
        String dir = jTitleList.getSelectedValue(); 
        this.dispose();  
        try {
            Data d = new Data(dir);
            d.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
        
    }//GEN-LAST:event_jStatActionPerformed

    private void jTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTestActionPerformed
        // TODO add your handling code here:
        if(jTitleList.isSelectionEmpty()){
        JOptionPane.showMessageDialog(rootPane, "Please Select the desired Title first.");
        
        }
    else{  
        String dir = jTitleList.getSelectedValue(); 
        this.dispose();  
        CardObj co = new CardObj(dir);
            try { 
                co.createList();
            } catch (IOException ex) {
                Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
            }
            Test t = new Test(dir,0,co.cardList); 
            t.setVisible(true);
    }    
    }//GEN-LAST:event_jTestActionPerformed

    private void jLearnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLearnActionPerformed
        // TODO add your handling code here:
        
            if(jTitleList.isSelectionEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please Select the desired Title first.");
            }
            else{ 
            String dir = jTitleList.getSelectedValue();
            Read_write rw = new Read_write(titles, true);
            CardObj cards = new CardObj(dir);
                    try { 
                        cards.createList();
                    } catch (IOException ex) {
                        Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
                    }
            this.dispose();
            Learning learn = new Learning(dir, cards.cardList); 
            learn.setVisible(true); 
                }
        
    }//GEN-LAST:event_jLearnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flashcards_topic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flashcards_topic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flashcards_topic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flashcards_topic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Flashcards_topic().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Flashcards_topic.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back1;
    private javax.swing.JButton create_new;
    private javax.swing.JButton jDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jLearn;
    private javax.swing.JList<String> jList1;
    private javax.swing.JButton jOverview;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jStat;
    private javax.swing.JButton jTest;
    private javax.swing.JList<String> jTitleList;
    private javax.swing.JButton jView;
    // End of variables declaration//GEN-END:variables

}
