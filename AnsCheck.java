/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project101;

import java.awt.Color;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author timomichaelis
 */
public class AnsCheck extends javax.swing.JFrame {

    int difficulty; 
    String dir; 
    String answer;
    LinkedList <CardObj> c; 
    /**
     * Creates new form AnsCheck
     */
    public AnsCheck(String path, String answer, int diff, LinkedList b) {
        initComponents();
        this.setLocationRelativeTo(null);
        c = b; 
        this.answer = answer; 
        
        dir = path; 
        difficulty = diff;
        System.out.println("the difficulty is " + difficulty); 
        
        jQuestionField.setText(c.getFirst().question);
        jQuestionField.setEditable(false);
        jAnswer.setText(c.getFirst().answer);
        jAnswer.setEditable(false);
        jYourAnswer.setText(answer); 
        jYourAnswer.setEditable(false); 
        
        if(jAnswer.getText().equals(jYourAnswer.getText())){
            jPanel1.setBackground(Color.GREEN);
        }else
        {jPanel1.setBackground(Color.RED);}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jNext = new javax.swing.JButton();
        jOverride = new javax.swing.JButton();
        jQuestionField = new javax.swing.JTextField();
        jAnswer = new javax.swing.JTextField();
        jYourAnswer = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jNext.setText("Next");
        jNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNextActionPerformed(evt);
            }
        });

        jOverride.setText("Override");
        jOverride.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOverrideActionPerformed(evt);
            }
        });

        jQuestionField.setText("Question");
        jQuestionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jQuestionFieldActionPerformed(evt);
            }
        });

        jAnswer.setText("Real Answer");
        jAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAnswerActionPerformed(evt);
            }
        });

        jYourAnswer.setText("Your Answer");
        jYourAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jYourAnswerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jQuestionField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jOverride, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jYourAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jNext, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jQuestionField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jYourAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jOverride, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jNext, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNextActionPerformed
        // TODO add your handling code here:
        CardObj co1 = new CardObj(dir);
        int size = c.size();
        
        try {
            co1.updateNsaveRate(c.getFirst().question, difficulty);
            
        } catch (IOException ex) {
            System.out.println("Something wrong with updating and saving difficulty");
        }
        
        
        
        if(size == 1){
             
            try {
                this.dispose();
                Flashcards_topic ft = new Flashcards_topic();
                ft.setVisible(true);
                
            } catch (IOException ex) {
               System.out.print("Button next, ending of anscheck error");
            }
        
        }
        else{
            
            System.out.println("the size of the list is: "+ size);
            
            String rating; 
            rating = Integer.toString(difficulty);
        
            CardObj co = new CardObj(c.getFirst().question, c.getFirst().answer, c.getFirst().hint, rating);  
            
             
             System.out.println("the next question is supposed to be :" + c.get(1).question);
        
            if(difficulty == 1){
                c.add(co);
            }
            
            else if(difficulty == 2){
                int index = (size/2);
                System.out.println("the index is :" + index);
                
            LinkedList <CardObj> temp = new LinkedList<CardObj>();
            
                    for(int i = 0; i < index; i ++){
                    CardObj x = c.get(size -1 -i);
                    temp.add(x);
                    c.removeLast();
                 } 
                c.add(co);
                
                System.out.println("co has been added in 2. the size of e is " + temp.size());
                
                while(temp.isEmpty() == false){
                    System.out.print(temp.getLast().question); 
                    c.add(temp.getLast());
                    temp.removeLast(); 
                    System.out.println("added for diff 2");
                }
            }     
            

            else if(difficulty == 3){
                
                int index = (size /4);
               System.out.println("the index is :" + index);
                
            LinkedList <CardObj> temp = new LinkedList<CardObj>();
            System.out.println("c should not be 0.... lets see: "+c.size()); 
                    for(int i = 0; i < index; i ++){
                    CardObj x = c.get(size -i -1);
                    temp.add(x);
                    c.removeLast();
                 } 
                c.add(co);
                
                System.out.println("co has been added in 3. the size of e is " + temp.size());
                
                while(temp.isEmpty() == false){
                    c.add(temp.getLast());
                    temp.removeLast(); 
                    System.out.println("added for diff 3");
                }
               
            }
            else if(difficulty == 4){
                c.addFirst(co);
            }
            
            c.removeFirst(); 
            this.dispose(); 
            Learning t = new Learning(dir, c); 
            t.setVisible(true); 
        }
        
    }//GEN-LAST:event_jNextActionPerformed

    private void jOverrideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOverrideActionPerformed
        int size = c.size();
        if (difficulty > 0){
            difficulty = difficulty - 1; 
            jPanel1.setBackground(Color.GREEN);
            jOverride.setEnabled(false); 
        }else {
            jOverride.setEnabled(false); 
        }
            
    }//GEN-LAST:event_jOverrideActionPerformed

    private void jQuestionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jQuestionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jQuestionFieldActionPerformed

    private void jAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAnswerActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jAnswerActionPerformed

    private void jYourAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jYourAnswerActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jYourAnswerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnsCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnsCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnsCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnsCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LinkedList a = null; 
                new AnsCheck("plswork","",0,a).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAnswer;
    private javax.swing.JButton jNext;
    private javax.swing.JButton jOverride;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jQuestionField;
    private javax.swing.JTextField jYourAnswer;
    // End of variables declaration//GEN-END:variables
}
